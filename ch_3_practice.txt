
## 1. Why are functions advantageous to have in your programs?

Functions compartmentalize code, reduce duplication, and allow variables to be defined in separate scopes. This makes code easier to read and maintain.


## 2. When does the code in a function execute: when the function is defined or when the function is called?

When the function is called.


## 3. What statement creates a function?

def


## 4. What is the difference between a function and a function call?

A function defines the code that eventually gets called. A function call actually executes the function code and returns the return value.


## 5. How many global scopes are there in a Python program? How many local scopes?

There is one global scope in a Python program. There is a separate local scope for each function call.


## 6. What happens to variables in a local scope when the function call returns?

The local variables are destroyed.


## 7. What is a return value? Can a return value be part of an expression?

A return value is the value that gets returned from a function call. Yes, a return value can be part of an expression.


## 8. If a function does not have a return statement, what is the return value of a call to that function?

None


## 9. How can you force a variable in a function to refer to the global variable?

You use the global statement at the beginnning of the function.


## 10. What is the data type of None?

NoneType


## 11. What does the import areallyourpetsnamederic statement do?

Loads the module called areallyourpetsnamederic.


## 12. If you had a function named bacon() in a module named spam, how would you call it after importing spam?

spam.bacon()


## 13. How can you prevent a program from crashing when it gets an error?

By using a try,except statement.


## 14. What goes in the try clause? What goes in the except clause?

The code that may generate an error goes in the try clause. The code that deals with the error(s) should go in the except clause.



